name: Release CI

on:
  push:
    branches:
      - "main"

jobs:
  build:
    name: Release CI
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: "adopt"

      - name: Cache local Maven repository
        uses: actions/cache@v3.0.11
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-release-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      # semantic-release:release will fail, when no release required
      - name: Release with Maven
        run: mvn -B semantic-release:release
        id: release
        continue-on-error: true

      - name: Sync develop
        run: |
          git checkout develop
          git merge main
          git push
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'
        continue-on-error: true

      - name: Switch back to main
        run: git checkout main
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'
        continue-on-error: true

      - name: Get current tag
        id: current_tag
        run: echo ::set-output name=tag::$(git describe --abbrev=0 --tags)
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'

      - name: Get Git Changelog
        id: get_changelog
        uses: thenilsdev/git-log-action@1.0.5
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'

      - name: Build with Maven
        run: mvn -B package
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'

      - name: Create Release
        uses: softprops/action-gh-release@v1
        id: create_release
        with:
          tag_name: ${{ steps.current_tag.outputs.tag }}
          name: Release ${{ steps.current_tag.outputs.tag }}
          body: ${{ steps.get_changelog.outputs.log }}
          files: ./artifacts/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'

      - name: Notify discord
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_RELEASE_WEBHOOK }}
          nodetail: true
          title: New release of ${{ github.event.repository.name }}
          description: |
            Version `${{ steps.current_tag.outputs.tag }}`
            Click [here](${{ steps.create_release.outputs.url }}) to view!

            ${{ steps.get_changelog.outputs.markdownLog }}

      - uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_RELEASE_WEBHOOK }}
